[{"C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\index.tsx":"1","C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\App.tsx":"2","C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\theme.ts":"3","C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\atom.tsx":"4","C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\components\\SectionL.tsx":"5","C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\components\\SectionR.tsx":"6","C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\utils\\calender.ts":"7"},{"size":342,"mtime":1661004849136,"results":"8","hashOfConfig":"9"},{"size":2601,"mtime":1661006214473,"results":"10","hashOfConfig":"9"},{"size":358,"mtime":1661004849136,"results":"11","hashOfConfig":"9"},{"size":568,"mtime":1661004849136,"results":"12","hashOfConfig":"9"},{"size":3783,"mtime":1661006559707,"results":"13","hashOfConfig":"9"},{"size":5765,"mtime":1661004849136,"results":"14","hashOfConfig":"9"},{"size":6184,"mtime":1661004849136,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sj4zyr",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\index.tsx",[],[],"C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\App.tsx",[],[],[],"C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\theme.ts",[],[],"C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\atom.tsx",[],[],"C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\components\\SectionL.tsx",[],[],"C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\components\\SectionR.tsx",["39"],[],"import {\r\n  faXmark,\r\n  faArrowLeft,\r\n  faArrowRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { nowMonthAtom, toDoAtom } from \"../atom\";\r\nimport { Calender } from \"../utils/calender\";\r\n\r\nconst Section = styled.section`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.SectionColor_R};\r\n`;\r\nconst Contents = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 30px;\r\n  position: relative;\r\n`;\r\n\r\nconst Date = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  gap: 15px;\r\n`;\r\n\r\nconst MonthChangeBtn = styled.button`\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  font-size: 25px;\r\n  cursor: pointer;\r\n  opacity: 0.5;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst WeekList = styled.ul`\r\n  display: flex;\r\n  gap: 44px;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: #2fe78e;\r\n`;\r\nconst WeekItem = styled.li``;\r\n\r\nconst Days = styled.div`\r\n  display: grid;\r\n  grid-gap: 1px;\r\n  grid-template-columns: repeat(7, 1fr);\r\n`;\r\nconst Day = styled.div<{ isHoliday: boolean; thisMonth: boolean }>`\r\n  padding: 30px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  color: ${(props) => (props.isHoliday ? \"red\" : \"inherit\")};\r\n  opacity: ${(props) => (props.thisMonth ? 1 : 0.3)};\r\n  pointer-events: ${(props) => (props.thisMonth ? \"\" : \"none\")};\r\n\r\n  &:hover {\r\n    background-color: lightgray;\r\n  }\r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 200px;\r\n  width: 600px;\r\n  height: 300px;\r\n  padding: 20px;\r\n  border-radius: 30px;\r\n  background-color: ${(props) => props.theme.BasicColor};\r\n`;\r\nconst Input = styled.input`\r\n  height: 25px;\r\n  width: 50%;\r\n  border-radius: 5px;\r\n  border: none;\r\n  padding: 5px;\r\n`;\r\n\r\ninterface ILocationProps {\r\n  rowIdx: number | 0;\r\n  colIdx: number | 0;\r\n  month: string | \"\";\r\n}\r\n\r\nconst Week = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SUN\", \"SAT\"];\r\n\r\nfunction SectionR() {\r\n  const [dayLocation, setDayLocation] = useState<ILocationProps>();\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [toDo, setToDo] = useRecoilState(toDoAtom);\r\n  const [addToDo, setAddToDo] = useState(\"\");\r\n  const [isJuly, setIsJuly] = useRecoilState(nowMonthAtom);\r\n\r\n  const onExit = () => setShowForm((prev) => !prev);\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    setAddToDo(\"\");\r\n    setToDo((prev) => {\r\n      if (dayLocation?.rowIdx === undefined) return prev;\r\n\r\n      if (dayLocation.month === \"july\") {\r\n        const copyJuly = JSON.parse(JSON.stringify(prev.july));\r\n        copyJuly[dayLocation.rowIdx][dayLocation.colIdx].toDo.push(addToDo);\r\n        return { august: prev.august, july: copyJuly };\r\n      }\r\n\r\n      if (dayLocation.month === \"august\") {\r\n        const copyAugust = JSON.parse(JSON.stringify(prev.august));\r\n        copyAugust[dayLocation.rowIdx][dayLocation.colIdx].toDo.push(addToDo);\r\n        return { august: copyAugust, july: prev.july };\r\n      }\r\n\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const onClick = (rowIdx: number, colIdx: number, month: string) => {\r\n    setDayLocation(() => {\r\n      return { rowIdx, colIdx, month };\r\n    });\r\n    setShowForm((prev) => !prev);\r\n  };\r\n\r\n  const onInput = (event: React.FormEvent<HTMLInputElement>) => {\r\n    setAddToDo(event.currentTarget.value);\r\n  };\r\n\r\n  const onChangeMonth = () => setIsJuly((prev) => !prev);\r\n\r\n  const createDay = (month: any) => {\r\n    return month.map((rowData: any, rowIdx: number) =>\r\n      rowData.map((colData: any, colIdx: number) => (\r\n        <Day\r\n          isHoliday={colData.isHoliday}\r\n          thisMonth={colData.thisMonth}\r\n          onClick={() => onClick(rowIdx, colIdx, `${month[0][0].month}`)}\r\n          key={colIdx}\r\n        >\r\n          {colData.day}\r\n        </Day>\r\n      ))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Contents>\r\n        <Date>\r\n          <h2>{isJuly ? \"July\" : \"August\"} 2022</h2>\r\n          {!isJuly ? (\r\n            <MonthChangeBtn onClick={onChangeMonth}>\r\n              <FontAwesomeIcon icon={faArrowLeft}></FontAwesomeIcon>\r\n            </MonthChangeBtn>\r\n          ) : null}\r\n          {!isJuly ? null : (\r\n            <MonthChangeBtn onClick={onChangeMonth}>\r\n              <FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon>\r\n            </MonthChangeBtn>\r\n          )}\r\n        </Date>\r\n        <WeekList>\r\n          {Week.map((v, idx) => (\r\n            <WeekItem key={idx}>{v}</WeekItem>\r\n          ))}\r\n        </WeekList>\r\n        <hr style={{ width: \"100%\" }} />\r\n        <Days>\r\n          {isJuly ? (\r\n            <>{createDay(Calender.july)}</>\r\n          ) : (\r\n            <>{createDay(Calender.august)}</>\r\n          )}\r\n        </Days>\r\n        {showForm ? (\r\n          <Form onSubmit={onSubmit}>\r\n            <FontAwesomeIcon\r\n              onClick={onExit}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"15px\",\r\n                right: \"15px\",\r\n                fontSize: \"30px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              icon={faXmark}\r\n            ></FontAwesomeIcon>\r\n            <Input\r\n              placeholder=\"add a toDo...\"\r\n              type=\"text\"\r\n              value={addToDo}\r\n              onInput={onInput}\r\n            />\r\n          </Form>\r\n        ) : null}\r\n      </Contents>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default SectionR;\r\n","C:\\Users\\sktjs\\Desktop\\project\\comento-todo\\src\\utils\\calender.ts",[],[],{"ruleId":"40","severity":1,"message":"41","line":107,"column":10,"nodeType":"42","messageId":"43","endLine":107,"endColumn":14},"@typescript-eslint/no-unused-vars","'toDo' is assigned a value but never used.","Identifier","unusedVar"]