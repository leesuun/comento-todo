{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sktjs\\\\Desktop\\\\project\\\\comento-todo\\\\src\\\\components\\\\SectionL.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport Clock from \"react-live-clock\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRecoilState } from \"recoil\";\nimport { themeAtom } from \"../atom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Section = styled.section`\n  padding: 10px;\n  background-color: ${props => props.theme.SectionColor_L};\n`;\n_c = Section;\nconst Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 100px;\n`;\n_c2 = Contents;\nconst AddFeatures = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c3 = AddFeatures;\nconst Time = styled.time`\n  font-size: 20px;\n  font-weight: bold;\n`;\n_c4 = Time;\nconst Weather = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  flex-direction: column;\n`;\n_c5 = Weather;\nconst WeatherImg = styled.img`\n  border: 1px solid black;\n  width: 70px;\n  height: 70px;\n`;\n_c6 = WeatherImg;\nconst Temp = styled.strong`\n  font-size: 25px;\n`;\n_c7 = Temp;\nconst WeatherState = styled.small``;\n_c8 = WeatherState;\nconst TodayTodo = styled.div`\n  width: 100%;\n`;\n_c9 = TodayTodo;\nconst ToDoSelect = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 3px;\n  text-align: center;\n`;\n_c10 = ToDoSelect;\nconst StateBtn = styled.button`\n  padding: 5px 20px;\n  border-radius: 10px;\n  background-color: black;\n  color: white;\n`;\n_c11 = StateBtn;\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 35px;\n`;\n_c12 = List;\nconst Item = styled.li``;\n_c13 = Item;\n\nfunction SectionL() {\n  _s();\n\n  const [isDark, setIsDark] = useRecoilState(themeAtom);\n\n  const onDarkMode = () => setIsDark(prev => !prev);\n\n  const [weather, setWeather] = useState();\n  useEffect(() => {\n    const API_KEY = \"b49d199d78db4d81dcf44e33698ac973\";\n\n    function getGeoInfoSuccess(position) {\n      const lat = position.coords.latitude;\n      const lon = position.coords.longitude;\n      const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\n      fetch(url).then(response => response.json()).then(data => setWeather(setWeather));\n    }\n\n    function getGeoInfoFail() {\n      alert(\"Cannot get the weather..!!\");\n    }\n\n    navigator.geolocation.getCurrentPosition(getGeoInfoSuccess, getGeoInfoFail);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: /*#__PURE__*/_jsxDEV(Contents, {\n      children: [/*#__PURE__*/_jsxDEV(AddFeatures, {\n        children: [/*#__PURE__*/_jsxDEV(Time, {\n          children: /*#__PURE__*/_jsxDEV(Clock, {\n            format: \"HH:mm:ss\",\n            ticking: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: onDarkMode,\n          icon: isDark ? faSun : faMoon,\n          style: {\n            fontSize: \"40px\",\n            color: isDark ? \"yellow\" : \"black\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {\n        children: [/*#__PURE__*/_jsxDEV(WeatherImg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Temp, {\n          children: \"13C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherState, {\n          children: \"partly-cloudy-night\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodayTodo, {\n        children: [/*#__PURE__*/_jsxDEV(ToDoSelect, {\n          children: [/*#__PURE__*/_jsxDEV(StateBtn, {\n            children: \"todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StateBtn, {\n            children: \"doing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StateBtn, {\n            children: \"done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [1, 2, 3, 4, 5, 6].map((v, idx) => /*#__PURE__*/_jsxDEV(Item, {\n            children: \"\\uC624\\uB298 \\uD560\\uC77C111111111111111111\"\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SectionL, \"YIwxdWJVBmI5xhl129tNr7wRGLw=\", false, function () {\n  return [useRecoilState];\n});\n\n_c14 = SectionL;\nexport default SectionL;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"Contents\");\n$RefreshReg$(_c3, \"AddFeatures\");\n$RefreshReg$(_c4, \"Time\");\n$RefreshReg$(_c5, \"Weather\");\n$RefreshReg$(_c6, \"WeatherImg\");\n$RefreshReg$(_c7, \"Temp\");\n$RefreshReg$(_c8, \"WeatherState\");\n$RefreshReg$(_c9, \"TodayTodo\");\n$RefreshReg$(_c10, \"ToDoSelect\");\n$RefreshReg$(_c11, \"StateBtn\");\n$RefreshReg$(_c12, \"List\");\n$RefreshReg$(_c13, \"Item\");\n$RefreshReg$(_c14, \"SectionL\");","map":{"version":3,"names":["styled","Clock","FontAwesomeIcon","faMoon","faSun","useRecoilState","themeAtom","useEffect","useState","Section","section","props","theme","SectionColor_L","Contents","div","AddFeatures","Time","time","Weather","WeatherImg","img","Temp","strong","WeatherState","small","TodayTodo","ToDoSelect","StateBtn","button","List","ul","Item","li","SectionL","isDark","setIsDark","onDarkMode","prev","weather","setWeather","API_KEY","getGeoInfoSuccess","position","lat","coords","latitude","lon","longitude","url","fetch","then","response","json","data","getGeoInfoFail","alert","navigator","geolocation","getCurrentPosition","fontSize","color","cursor","map","v","idx"],"sources":["C:/Users/sktjs/Desktop/project/comento-todo/src/components/SectionL.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport Clock from \"react-live-clock\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { themeAtom } from \"../atom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Section = styled.section`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.SectionColor_L};\r\n`;\r\nconst Contents = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 100px;\r\n`;\r\nconst AddFeatures = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst Time = styled.time`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Weather = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  flex-direction: column;\r\n`;\r\nconst WeatherImg = styled.img`\r\n  border: 1px solid black;\r\n  width: 70px;\r\n  height: 70px;\r\n`;\r\nconst Temp = styled.strong`\r\n  font-size: 25px;\r\n`;\r\nconst WeatherState = styled.small``;\r\n\r\nconst TodayTodo = styled.div`\r\n  width: 100%;\r\n`;\r\nconst ToDoSelect = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 3px;\r\n  text-align: center;\r\n`;\r\nconst StateBtn = styled.button`\r\n  padding: 5px 20px;\r\n  border-radius: 10px;\r\n  background-color: black;\r\n  color: white;\r\n`;\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  margin-top: 35px;\r\n`;\r\nconst Item = styled.li``;\r\n\r\ninterface IWeatherProps {\r\n  coord: object;\r\n  weather: object;\r\n  base: string;\r\n  main: object;\r\n  visibility: number;\r\n  wind: object;\r\n  clouds: object;\r\n  dt: number;\r\n  sys: object;\r\n  timezone: number;\r\n  id: number;\r\n  name: string;\r\n  cod: number;\r\n}\r\n\r\nfunction SectionL() {\r\n  const [isDark, setIsDark] = useRecoilState(themeAtom);\r\n  const onDarkMode = () => setIsDark((prev) => !prev);\r\n  const [weather, setWeather] = useState<IWeatherProps>();\r\n\r\n  useEffect(() => {\r\n    const API_KEY = \"b49d199d78db4d81dcf44e33698ac973\";\r\n\r\n    function getGeoInfoSuccess(position: GeolocationPosition) {\r\n      const lat = position.coords.latitude;\r\n      const lon = position.coords.longitude;\r\n\r\n      const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`;\r\n\r\n      fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => setWeather(setWeather));\r\n    }\r\n\r\n    function getGeoInfoFail() {\r\n      alert(\"Cannot get the weather..!!\");\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(getGeoInfoSuccess, getGeoInfoFail);\r\n  }, []);\r\n\r\n  return (\r\n    <Section>\r\n      <Contents>\r\n        <AddFeatures>\r\n          <Time>\r\n            <Clock format={\"HH:mm:ss\"} ticking={true} />\r\n          </Time>\r\n          <FontAwesomeIcon\r\n            onClick={onDarkMode}\r\n            icon={isDark ? faSun : faMoon}\r\n            style={{\r\n              fontSize: \"40px\",\r\n              color: isDark ? \"yellow\" : \"black\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          ></FontAwesomeIcon>\r\n        </AddFeatures>\r\n        <Weather>\r\n          <WeatherImg />\r\n          <Temp>13C</Temp>\r\n          <WeatherState>partly-cloudy-night</WeatherState>\r\n        </Weather>\r\n        <TodayTodo>\r\n          <ToDoSelect>\r\n            <StateBtn>todo</StateBtn>\r\n            <StateBtn>doing</StateBtn>\r\n            <StateBtn>done</StateBtn>\r\n          </ToDoSelect>\r\n          <List>\r\n            {[1, 2, 3, 4, 5, 6].map((v, idx) => (\r\n              <Item key={idx}>오늘 할일111111111111111111</Item>\r\n            ))}\r\n          </List>\r\n        </TodayTodo>\r\n      </Contents>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default SectionL;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}